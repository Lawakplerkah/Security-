{
  "update": [
    {
      "path": "plugins/convert/brat.js",
      "code": "let fetch = require(\\\"node-fetch\\\");\n\nexports.run = {\n  usage: [\\\"brat\\\", \\\"bratgif\\\"],\n  use: \\\"text\\\",\n  category: \\\"convert\\\",\n  async: async (t, { func: e, kuromi: a, packname: r, author: i }) => {\n    let isGif = t.command === \\\"bratgif\\\";\n    let maxLength = isGif ? 250 : 150;\n    let textInput;\n\n    if (t.args.length >= 1) {\n      textInput = t.args.join(\\\" \\\");\n    } else {\n      if (!t.quoted || !t.quoted.text) return t.reply(\\\"Input atau reply text!\\\");\n      textInput = t.quoted.text;\n    }\n\n    if (!textInput) return t.reply(e.example(t.cmd, \\\"yaudah iya\\\"));\n    if (textInput.length > maxLength) return t.reply(`Max ${maxLength} karakter!`);\n    if (isGif && textInput.split(\\\" \\\").length < 2) return t.reply(\\\"Minimal 2 kata!\\\");\n\n    a.sendReact(t.chat, \\\"🕒\\\", t.key);\n\n    const url = isGif\n      ? \\\"https://apizell.web.id/tools/bratanimate?q=\\\" + encodeURIComponent(textInput)\n      : \\\"https://api.sxtream.xyz/maker/brat?text=\\\" + encodeURIComponent(textInput);\n\n    a.sendSticker(t.chat, url, t, {\n      packname: r,\n      author: i\n    }).catch(err => {\n      t.reply(`Terjadi kesalahan saat membuat sticker.\\n- ${err.message}`);\n    });\n  },\n  limit: true,\n  restrict: false,\n  location: \\\"plugins/convert/brat.js\\\"\n};"
    },
    {
      "path": "plugins/convert/iphoneqc.js",
      "code": "const axios = require('axios');\nconst { Buffer } = require('buffer');\n\nexports.run = {\n  usage: ['iqc', 'iphoneqc'],\n  hidden: [],\n  use: 'Generate iPhone Quoted Chat image dari teks',\n  category: 'convert',\n  async: async (m, { func, kuromi, isPrem }) => {\n    const text = m.text;\n\n    if (!text) return m.reply('⚠️ Masukkan teks setelah perintah.');\n\n    try {\n      const apiUrl = `https://api.sxtream.xyz/maker/iqc=${encodeURIComponent(text)}`;\n      const response = await axios.get(apiUrl, { responseType: 'arraybuffer' });\n      const bufferImage = Buffer.from(response.data);\n\n      await kuromi.sendMessage(m.chat, {\n        image: bufferImage,\n        caption: `🖼️ *iPhone Quoted Chat*\\n\\n📝 *Text:* ${text}`\n      }, { quoted: m });\n\n    } catch (err) {\n      console.error('❌ IQC Error:', err);\n      m.reply(`❌ Gagal membuat gambar.\\n📄 *Error:* ${err.message}`);\n    }\n  },\n  location: \\\"plugins/convert/iphoneqc.js\\\",\n  premium: true\n};"
    }
  ],
  "remove": [],
  "version": "1.07"
}